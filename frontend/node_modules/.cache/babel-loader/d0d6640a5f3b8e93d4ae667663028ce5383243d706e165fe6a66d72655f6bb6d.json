{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\demo\\\\demo\\\\frontend\\\\src\\\\pages\\\\wallet.js\",\n  _s = $RefreshSig$();\n// This is for imply and connect MetaMask to this.\n// Importing modules\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { MainNav } from \"../components/nav\";\nimport \"../styles/wallet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Wallet() {\n  _s();\n  // usetstate for storing and retrieving wallet details\n  const [data, setdata] = useState({\n    address: \"\",\n    Balance: null\n  });\n\n  // Button handler button for handling a\n  // request event for metamask\n  const btnhandler = () => {\n    // Asking if metamask is already present or not\n    if (window.ethereum) {\n      // res[0] for fetching a first wallet\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(res => accountChangeHandler(res[0]));\n    } else {\n      alert(\"install metamask extension!!\");\n    }\n  };\n\n  // getbalance function for getting a balance in\n  // a right format with help of ethers\n  const getbalance = address => {\n    // Requesting balance method\n    window.ethereum.request({\n      method: \"eth_getBalance\",\n      params: [address, \"latest\"]\n    }).then(balance => {\n      // Setting balance\n      setdata({\n        Balance: ethers.formatEther(balance)\n      });\n    });\n  };\n\n  // Function for getting handling all events\n  const accountChangeHandler = account => {\n    // Setting an address data\n    setdata({\n      address: account\n    });\n\n    // Setting a balance\n    getbalance(account);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Wallet\",\n    children: [/*#__PURE__*/_jsxDEV(MainNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), data.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Balance: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), data.Balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: btnhandler,\n          variant: \"primary\",\n          children: \"Connect to wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Wallet, \"ITiLYNstXHHjoIQ3gxFSgNd5BQQ=\");\n_c = Wallet;\nexport default Wallet;\nvar _c;\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["React","useState","ethers","Button","Card","MainNav","jsxDEV","_jsxDEV","Wallet","_s","data","setdata","address","Balance","btnhandler","window","ethereum","request","method","then","res","accountChangeHandler","alert","getbalance","params","balance","formatEther","account","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Header","Body","Text","onClick","variant","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Downloads/demo/demo/frontend/src/pages/wallet.js"],"sourcesContent":["// This is for imply and connect MetaMask to this.\r\n// Importing modules\r\nimport React, { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { MainNav } from \"../components/nav\";\r\nimport \"../styles/wallet.css\"\r\n\r\nfunction Wallet() {\r\n    // usetstate for storing and retrieving wallet details\r\n    const [data, setdata] = useState({\r\n        address: \"\",\r\n        Balance: null,\r\n    });\r\n\r\n    // Button handler button for handling a\r\n    // request event for metamask\r\n    const btnhandler = () => {\r\n        // Asking if metamask is already present or not\r\n        if (window.ethereum) {\r\n            // res[0] for fetching a first wallet\r\n            window.ethereum\r\n                .request({ method: \"eth_requestAccounts\" })\r\n                .then((res) =>\r\n                    accountChangeHandler(res[0])\r\n                );\r\n        } else {\r\n            alert(\"install metamask extension!!\");\r\n        }\r\n    };\r\n\r\n    // getbalance function for getting a balance in\r\n    // a right format with help of ethers\r\n    const getbalance = (address) => {\r\n        // Requesting balance method\r\n        window.ethereum\r\n            .request({\r\n                method: \"eth_getBalance\",\r\n                params: [address, \"latest\"],\r\n            })\r\n            .then((balance) => {\r\n                // Setting balance\r\n                setdata({\r\n                    Balance:\r\n                        ethers.formatEther(balance),\r\n                });\r\n            });\r\n    };\r\n\r\n    // Function for getting handling all events\r\n    const accountChangeHandler = (account) => {\r\n        // Setting an address data\r\n        setdata({\r\n            address: account,\r\n        });\r\n\r\n        // Setting a balance\r\n        getbalance(account);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Wallet\">\r\n            {/* Calling all values which we \r\n       have stored in usestate */}\r\n            <MainNav />\r\n\r\n\r\n            <Card className=\"text-center\">\r\n                <Card.Header>\r\n                    <strong>Address: </strong>\r\n                    {data.address}\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        <strong>Balance: </strong>\r\n                        {data.Balance}\r\n                    </Card.Text>\r\n                    <Button\r\n                        onClick={btnhandler}\r\n                        variant=\"primary\"\r\n                    >\r\n                        Connect to wallet\r\n                    </Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Wallet;"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC9C,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,OAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC7BW,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACb,CAAC,CAAC;;EAEF;EACA;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB;IACA,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACjB;MACAD,MAAM,CAACC,QAAQ,CACVC,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC,CAC1CC,IAAI,CAAEC,GAAG,IACNC,oBAAoB,CAACD,GAAG,CAAC,CAAC,CAAC,CAC/B,CAAC;IACT,CAAC,MAAM;MACHE,KAAK,CAAC,8BAA8B,CAAC;IACzC;EACJ,CAAC;;EAED;EACA;EACA,MAAMC,UAAU,GAAIX,OAAO,IAAK;IAC5B;IACAG,MAAM,CAACC,QAAQ,CACVC,OAAO,CAAC;MACLC,MAAM,EAAE,gBAAgB;MACxBM,MAAM,EAAE,CAACZ,OAAO,EAAE,QAAQ;IAC9B,CAAC,CAAC,CACDO,IAAI,CAAEM,OAAO,IAAK;MACf;MACAd,OAAO,CAAC;QACJE,OAAO,EACHX,MAAM,CAACwB,WAAW,CAACD,OAAO;MAClC,CAAC,CAAC;IACN,CAAC,CAAC;EACV,CAAC;;EAED;EACA,MAAMJ,oBAAoB,GAAIM,OAAO,IAAK;IACtC;IACAhB,OAAO,CAAC;MACJC,OAAO,EAAEe;IACb,CAAC,CAAC;;IAEF;IACAJ,UAAU,CAACI,OAAO,CAAC;EACvB,CAAC;EAED,oBACIpB,OAAA;IAAKqB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBAGnBtB,OAAA,CAACF,OAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGX1B,OAAA,CAACH,IAAI;MAACwB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACzBtB,OAAA,CAACH,IAAI,CAAC8B,MAAM;QAAAL,QAAA,gBACRtB,OAAA;UAAAsB,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACzBvB,IAAI,CAACE,OAAO;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACd1B,OAAA,CAACH,IAAI,CAAC+B,IAAI;QAAAN,QAAA,gBACNtB,OAAA,CAACH,IAAI,CAACgC,IAAI;UAAAP,QAAA,gBACNtB,OAAA;YAAAsB,QAAA,EAAQ;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACzBvB,IAAI,CAACG,OAAO;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACZ1B,OAAA,CAACJ,MAAM;UACHkC,OAAO,EAAEvB,UAAW;UACpBwB,OAAO,EAAC,SAAS;UAAAT,QAAA,EACpB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACxB,EAAA,CA/EQD,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AAiFf,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}