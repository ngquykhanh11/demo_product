{"ast":null,"code":"// This is for imply and connect MetaMask to this.\n// Importing modules\nimport React,{useState}from\"react\";import{ethers}from\"ethers\";import{Button,Card}from\"react-bootstrap\";import{MainNav}from\"../components/nav\";import\"../styles/wallet.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Wallet(){// usetstate for storing and retrieving wallet details\nconst[data,setdata]=useState({address:\"\",Balance:null});// Button handler button for handling a\n// request event for metamask\nconst btnhandler=()=>{// Asking if metamask is already present or not\nif(window.ethereum){// res[0] for fetching a first wallet\nwindow.ethereum.request({method:\"eth_requestAccounts\"}).then(res=>accountChangeHandler(res[0]));}else{alert(\"install metamask extension!!\");}};// getbalance function for getting a balance in\n// a right format with help of ethers\nconst getbalance=address=>{// Requesting balance method\nwindow.ethereum.request({method:\"eth_getBalance\",params:[address,\"latest\"]}).then(balance=>{// Setting balance\nsetdata({Balance:ethers.formatEther(balance)});});};// Function for getting handling all events\nconst accountChangeHandler=account=>{// Setting an address data\nsetdata({address:account});// Setting a balance\ngetbalance(account);};return/*#__PURE__*/_jsxs(\"div\",{className:\"Wallet\",children:[/*#__PURE__*/_jsx(MainNav,{}),/*#__PURE__*/_jsxs(Card,{className:\"text-center\",children:[/*#__PURE__*/_jsxs(Card.Header,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Address: \"}),data.address]}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Card.Text,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Balance: \"}),data.Balance]}),/*#__PURE__*/_jsx(Button,{onClick:btnhandler,variant:\"primary\",children:\"Connect to wallet\"})]})]})]});}export default Wallet;","map":{"version":3,"names":["React","useState","ethers","Button","Card","MainNav","jsx","_jsx","jsxs","_jsxs","Wallet","data","setdata","address","Balance","btnhandler","window","ethereum","request","method","then","res","accountChangeHandler","alert","getbalance","params","balance","formatEther","account","className","children","Header","Body","Text","onClick","variant"],"sources":["C:/Users/ADMIN/Downloads/demo/demo/frontend/src/pages/wallet.js"],"sourcesContent":["// This is for imply and connect MetaMask to this.\r\n// Importing modules\r\nimport React, { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { MainNav } from \"../components/nav\";\r\nimport \"../styles/wallet.css\"\r\n\r\nfunction Wallet() {\r\n    // usetstate for storing and retrieving wallet details\r\n    const [data, setdata] = useState({\r\n        address: \"\",\r\n        Balance: null,\r\n    });\r\n\r\n    // Button handler button for handling a\r\n    // request event for metamask\r\n    const btnhandler = () => {\r\n        // Asking if metamask is already present or not\r\n        if (window.ethereum) {\r\n            // res[0] for fetching a first wallet\r\n            window.ethereum\r\n                .request({ method: \"eth_requestAccounts\" })\r\n                .then((res) =>\r\n                    accountChangeHandler(res[0])\r\n                );\r\n        } else {\r\n            alert(\"install metamask extension!!\");\r\n        }\r\n    };\r\n\r\n    // getbalance function for getting a balance in\r\n    // a right format with help of ethers\r\n    const getbalance = (address) => {\r\n        // Requesting balance method\r\n        window.ethereum\r\n            .request({\r\n                method: \"eth_getBalance\",\r\n                params: [address, \"latest\"],\r\n            })\r\n            .then((balance) => {\r\n                // Setting balance\r\n                setdata({\r\n                    Balance:\r\n                        ethers.formatEther(balance),\r\n                });\r\n            });\r\n    };\r\n\r\n    // Function for getting handling all events\r\n    const accountChangeHandler = (account) => {\r\n        // Setting an address data\r\n        setdata({\r\n            address: account,\r\n        });\r\n\r\n        // Setting a balance\r\n        getbalance(account);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Wallet\">\r\n            {/* Calling all values which we \r\n       have stored in usestate */}\r\n            <MainNav />\r\n\r\n\r\n            <Card className=\"text-center\">\r\n                <Card.Header>\r\n                    <strong>Address: </strong>\r\n                    {data.address}\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        <strong>Balance: </strong>\r\n                        {data.Balance}\r\n                    </Card.Text>\r\n                    <Button\r\n                        onClick={btnhandler}\r\n                        variant=\"primary\"\r\n                    >\r\n                        Connect to wallet\r\n                    </Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Wallet;"],"mappings":"AAAA;AACA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,MAAM,KAAQ,QAAQ,CAC/B,OAASC,MAAM,CAAEC,IAAI,KAAQ,iBAAiB,CAC9C,OAASC,OAAO,KAAQ,mBAAmB,CAC3C,MAAO,sBAAsB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7B,QAAS,CAAAC,MAAMA,CAAA,CAAG,CACd;AACA,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,CAC7BY,OAAO,CAAE,EAAE,CACXC,OAAO,CAAE,IACb,CAAC,CAAC,CAEF;AACA;AACA,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACrB;AACA,GAAIC,MAAM,CAACC,QAAQ,CAAE,CACjB;AACAD,MAAM,CAACC,QAAQ,CACVC,OAAO,CAAC,CAAEC,MAAM,CAAE,qBAAsB,CAAC,CAAC,CAC1CC,IAAI,CAAEC,GAAG,EACNC,oBAAoB,CAACD,GAAG,CAAC,CAAC,CAAC,CAC/B,CAAC,CACT,CAAC,IAAM,CACHE,KAAK,CAAC,8BAA8B,CAAC,CACzC,CACJ,CAAC,CAED;AACA;AACA,KAAM,CAAAC,UAAU,CAAIX,OAAO,EAAK,CAC5B;AACAG,MAAM,CAACC,QAAQ,CACVC,OAAO,CAAC,CACLC,MAAM,CAAE,gBAAgB,CACxBM,MAAM,CAAE,CAACZ,OAAO,CAAE,QAAQ,CAC9B,CAAC,CAAC,CACDO,IAAI,CAAEM,OAAO,EAAK,CACf;AACAd,OAAO,CAAC,CACJE,OAAO,CACHZ,MAAM,CAACyB,WAAW,CAACD,OAAO,CAClC,CAAC,CAAC,CACN,CAAC,CAAC,CACV,CAAC,CAED;AACA,KAAM,CAAAJ,oBAAoB,CAAIM,OAAO,EAAK,CACtC;AACAhB,OAAO,CAAC,CACJC,OAAO,CAAEe,OACb,CAAC,CAAC,CAEF;AACAJ,UAAU,CAACI,OAAO,CAAC,CACvB,CAAC,CAED,mBACInB,KAAA,QAAKoB,SAAS,CAAC,QAAQ,CAAAC,QAAA,eAGnBvB,IAAA,CAACF,OAAO,GAAE,CAAC,cAGXI,KAAA,CAACL,IAAI,EAACyB,SAAS,CAAC,aAAa,CAAAC,QAAA,eACzBrB,KAAA,CAACL,IAAI,CAAC2B,MAAM,EAAAD,QAAA,eACRvB,IAAA,WAAAuB,QAAA,CAAQ,WAAS,CAAQ,CAAC,CACzBnB,IAAI,CAACE,OAAO,EACJ,CAAC,cACdJ,KAAA,CAACL,IAAI,CAAC4B,IAAI,EAAAF,QAAA,eACNrB,KAAA,CAACL,IAAI,CAAC6B,IAAI,EAAAH,QAAA,eACNvB,IAAA,WAAAuB,QAAA,CAAQ,WAAS,CAAQ,CAAC,CACzBnB,IAAI,CAACG,OAAO,EACN,CAAC,cACZP,IAAA,CAACJ,MAAM,EACH+B,OAAO,CAAEnB,UAAW,CACpBoB,OAAO,CAAC,SAAS,CAAAL,QAAA,CACpB,mBAED,CAAQ,CAAC,EACF,CAAC,EACV,CAAC,EACN,CAAC,CAEd,CAEA,cAAe,CAAApB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}